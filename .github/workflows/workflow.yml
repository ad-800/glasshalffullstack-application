name: workflow

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
    - name: Check out Git repository
      uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with: 
        arguments: build
        build-root-directory: api/


  build-frontend:
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
    - name: Check out Git repository
      uses: actions/checkout@v3
    - name: Set up Node
      uses: actions/setup-node@v3
      with:
        node-version: 18 # TODO - what node version?
    - name: Install and test with Node
      working-directory: ./frontend
      run: |
        npm ci
        npm test
  
  
  test-backend-gradle:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    steps:
    - name: Check out Git repository
      uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with: 
        arguments: test
        build-root-directory: api/
    

  test-backend-newman:
    # TODO - what resources do we need for these tests?
    needs: build-backend
    runs-on: ubuntu-latest
    steps:
    # TODO debug
    - name: Check out Git repository
      uses: actions/checkout@v3

    - name: Install Node
      uses: actions/setup-node@v3
    # - name: Install dependencies
    #   run: npm install
    - name: Install newman
      run: |
        npm install -g newman
        npm install -g newman-reporter-htmlextra

    - name: Make directory for Test Results
      run: mkdir -p testArtifacts
    
    - name: Run the API and Postman Collection
      run: | 
        newman run //api.getpostman.com/collections/{{ secrets.CID }}?apikey={{ secrets.POSTMAN_API_KEY}} -f htmlextra --reporter-htmlextra-export testArtifacts/htmlreport.html --reporter-htmlextra-darkTheme > testArtifacts/reunreport.html
    # Upload the contents of Test Artifacts dir to workspace
    - name: Output the test result details
      uses: actions/upload-artifact@v2
      with:
        name: RunReports
        path: testArtifacts